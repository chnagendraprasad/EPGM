//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EPGM.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Infrastructure;
    // using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;

    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<VWGetProject> VWGetProjects { get; set; }
        public DbSet<VWGetSector> VWGetSectors { get; set; }
        public DbSet<TblDistrict> TblDistricts { get; set; }
        public DbSet<TblProject> TblProjects { get; set; }
        public DbSet<TblSector> TblSectors { get; set; }
        public DbSet<MenuMaster> MenuMasters { get; set; }
        public DbSet<TblAWC> TblAWCs { get; set; }
        public DbSet<TblPortalUser> TblPortalUsers { get; set; }
    
        public virtual ObjectResult<SpGetBenes_Result> SpGetBenes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBenes_Result>("SpGetBenes");
        }
    
        public virtual ObjectResult<SpGetDistDetails_Result> SpGetDistDetails(string stateCode)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDistDetails_Result>("SpGetDistDetails", stateCodeParameter);
        }
    
        public virtual ObjectResult<SpGetSectorDetails_Result> SpGetSectorDetails(string stateCode, string projCode)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var projCodeParameter = projCode != null ?
                new ObjectParameter("ProjCode", projCode) :
                new ObjectParameter("ProjCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSectorDetails_Result>("SpGetSectorDetails", stateCodeParameter, projCodeParameter);
        }
    
        public virtual int SpGetAWW(string projCode, string aWCCode)
        {
            var projCodeParameter = projCode != null ?
                new ObjectParameter("ProjCode", projCode) :
                new ObjectParameter("ProjCode", typeof(string));
    
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpGetAWW", projCodeParameter, aWCCodeParameter);
        }
    
        public virtual ObjectResult<SpGetDistrict_Result> SpGetDistrict(string stateCode)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDistrict_Result>("SpGetDistrict", stateCodeParameter);
        }
    
        public virtual ObjectResult<SpGetEPGMDistDetails_Result> SpGetEPGMDistDetails(string wHOCode, string stateCode, string distCode)
        {
            var wHOCodeParameter = wHOCode != null ?
                new ObjectParameter("WHOCode", wHOCode) :
                new ObjectParameter("WHOCode", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEPGMDistDetails_Result>("SpGetEPGMDistDetails", wHOCodeParameter, stateCodeParameter, distCodeParameter);
        }
    
        public virtual ObjectResult<CheckValidUser_Result> CheckValidUser(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckValidUser_Result>("CheckValidUser", usernameParameter);
        }
    
        public virtual ObjectResult<SpGetUserRoles_Result> SpGetUserRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetUserRoles_Result>("SpGetUserRoles");
        }
    
        public virtual ObjectResult<Nullable<int>> SpRegisterUser(string username, string password, string mobileNo, string userEmail, Nullable<int> roleID, string stateCode, string districtCode, string projectCode, string sectorCode, string aWCCode, Nullable<int> createdBy, Nullable<System.DateTime> createdDate, Nullable<int> updatedBy, Nullable<System.DateTime> updatedDate)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpRegisterUser", usernameParameter, passwordParameter, mobileNoParameter, userEmailParameter, roleIDParameter, stateCodeParameter, districtCodeParameter, projectCodeParameter, sectorCodeParameter, aWCCodeParameter, createdByParameter, createdDateParameter, updatedByParameter, updatedDateParameter);
        }
    
        public virtual ObjectResult<SpGetCounts_Result> SpGetCounts(string stateCode)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetCounts_Result>("SpGetCounts", stateCodeParameter);
        }
    
        public virtual ObjectResult<SpGetUpdatedBeneInfo_Result> SpGetUpdatedBeneInfo(string beneCode)
        {
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetUpdatedBeneInfo_Result>("SpGetUpdatedBeneInfo", beneCodeParameter);
        }
    
        public virtual ObjectResult<USP_S_CATEGORY_Result> USP_S_CATEGORY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_S_CATEGORY_Result>("USP_S_CATEGORY");
        }
    
        public virtual int SpUpdateEPGMStatus(string aWCCode, string beneCode, string status)
        {
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateEPGMStatus", aWCCodeParameter, beneCodeParameter, statusParameter);
        }
    
        public virtual int SpUpdateSmartAttendanceStatus(string aWCCode, string beneCode, string status)
        {
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpUpdateSmartAttendanceStatus", aWCCodeParameter, beneCodeParameter, statusParameter);
        }
    
        public virtual ObjectResult<SpGetStates_Result> SpGetStates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetStates_Result>("SpGetStates");
        }
    
        public virtual ObjectResult<Nullable<int>> SpCheckUser(string loginUserName)
        {
            var loginUserNameParameter = loginUserName != null ?
                new ObjectParameter("LoginUserName", loginUserName) :
                new ObjectParameter("LoginUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCheckUser", loginUserNameParameter);
        }
    
        public virtual ObjectResult<SpGetRoles_Result> SpGetRoles(Nullable<int> roleCode)
        {
            var roleCodeParameter = roleCode.HasValue ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetRoles_Result>("SpGetRoles", roleCodeParameter);
        }
    
        public virtual ObjectResult<SPChangePassword_Result> SPChangePassword(string userCode, string password)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPChangePassword_Result>("SPChangePassword", userCodeParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> USP_I_BENEFICIARY(string aWCCode, string beneName, string beneSurname, string beneMiddleName, string motherName, string fatherName, string fatherRationCardNumber, Nullable<System.DateTime> dOB, string gender, string mobileNumber, string contact1, string contact2, string beneCategory, Nullable<int> beneType, string aadhaarNumber, string aadhaarType, string residentType, Nullable<System.DateTime> registeredDate, Nullable<decimal> income, string stateCode, string districtCode, string projectCode, string sectorCode, Nullable<int> createdBy, Nullable<System.DateTime> createdDate)
        {
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var beneNameParameter = beneName != null ?
                new ObjectParameter("BeneName", beneName) :
                new ObjectParameter("BeneName", typeof(string));
    
            var beneSurnameParameter = beneSurname != null ?
                new ObjectParameter("BeneSurname", beneSurname) :
                new ObjectParameter("BeneSurname", typeof(string));
    
            var beneMiddleNameParameter = beneMiddleName != null ?
                new ObjectParameter("BeneMiddleName", beneMiddleName) :
                new ObjectParameter("BeneMiddleName", typeof(string));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var fatherRationCardNumberParameter = fatherRationCardNumber != null ?
                new ObjectParameter("FatherRationCardNumber", fatherRationCardNumber) :
                new ObjectParameter("FatherRationCardNumber", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var contact1Parameter = contact1 != null ?
                new ObjectParameter("Contact1", contact1) :
                new ObjectParameter("Contact1", typeof(string));
    
            var contact2Parameter = contact2 != null ?
                new ObjectParameter("Contact2", contact2) :
                new ObjectParameter("Contact2", typeof(string));
    
            var beneCategoryParameter = beneCategory != null ?
                new ObjectParameter("BeneCategory", beneCategory) :
                new ObjectParameter("BeneCategory", typeof(string));
    
            var beneTypeParameter = beneType.HasValue ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(int));
    
            var aadhaarNumberParameter = aadhaarNumber != null ?
                new ObjectParameter("AadhaarNumber", aadhaarNumber) :
                new ObjectParameter("AadhaarNumber", typeof(string));
    
            var aadhaarTypeParameter = aadhaarType != null ?
                new ObjectParameter("AadhaarType", aadhaarType) :
                new ObjectParameter("AadhaarType", typeof(string));
    
            var residentTypeParameter = residentType != null ?
                new ObjectParameter("ResidentType", residentType) :
                new ObjectParameter("ResidentType", typeof(string));
    
            var registeredDateParameter = registeredDate.HasValue ?
                new ObjectParameter("RegisteredDate", registeredDate) :
                new ObjectParameter("RegisteredDate", typeof(System.DateTime));
    
            var incomeParameter = income.HasValue ?
                new ObjectParameter("Income", income) :
                new ObjectParameter("Income", typeof(decimal));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_I_BENEFICIARY", aWCCodeParameter, beneNameParameter, beneSurnameParameter, beneMiddleNameParameter, motherNameParameter, fatherNameParameter, fatherRationCardNumberParameter, dOBParameter, genderParameter, mobileNumberParameter, contact1Parameter, contact2Parameter, beneCategoryParameter, beneTypeParameter, aadhaarNumberParameter, aadhaarTypeParameter, residentTypeParameter, registeredDateParameter, incomeParameter, stateCodeParameter, districtCodeParameter, projectCodeParameter, sectorCodeParameter, createdByParameter, createdDateParameter);
        }
    
        public virtual ObjectResult<string> SPGetUserMail(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPGetUserMail", usernameParameter);
        }
    
        public virtual ObjectResult<SPUpdatePassword_Result> SPUpdatePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUpdatePassword_Result>("SPUpdatePassword", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SPCreateAWC_Result> SPCreateAWC(string aWCName, string mobileNumber, string email, string address, string aWCType, string stateCode, string districtCode, string projectCode, string sectorCode, Nullable<int> createdBy)
        {
            var aWCNameParameter = aWCName != null ?
                new ObjectParameter("AWCName", aWCName) :
                new ObjectParameter("AWCName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var aWCTypeParameter = aWCType != null ?
                new ObjectParameter("AWCType", aWCType) :
                new ObjectParameter("AWCType", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCreateAWC_Result>("SPCreateAWC", aWCNameParameter, mobileNumberParameter, emailParameter, addressParameter, aWCTypeParameter, stateCodeParameter, districtCodeParameter, projectCodeParameter, sectorCodeParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SPUpdateDistrict_Result> SPUpdateDistrict(string stateCode, string districtCode, string districtName, Nullable<int> updatedBy)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var districtNameParameter = districtName != null ?
                new ObjectParameter("DistrictName", districtName) :
                new ObjectParameter("DistrictName", typeof(string));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUpdateDistrict_Result>("SPUpdateDistrict", stateCodeParameter, districtCodeParameter, districtNameParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<SpGetEPGMDashboardCount_Result> SpGetEPGMDashboardCount(string stateCode)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEPGMDashboardCount_Result>("SpGetEPGMDashboardCount", stateCodeParameter);
        }
    
        public virtual ObjectResult<SPBindMenuByUserType_Result> SPBindMenuByUserType(Nullable<int> userTypeID)
        {
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPBindMenuByUserType_Result>("SPBindMenuByUserType", userTypeIDParameter);
        }
    
        public virtual ObjectResult<SPGETUserRights_Result> SPGETUserRights(string url, Nullable<int> uerType)
        {
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var uerTypeParameter = uerType.HasValue ?
                new ObjectParameter("UerType", uerType) :
                new ObjectParameter("UerType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGETUserRights_Result>("SPGETUserRights", urlParameter, uerTypeParameter);
        }
    
        public virtual ObjectResult<SPStateSpecificData_Result> SPStateSpecificData(Nullable<int> stateCode)
        {
            var stateCodeParameter = stateCode.HasValue ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPStateSpecificData_Result>("SPStateSpecificData", stateCodeParameter);
        }
    
        public virtual ObjectResult<string> SpUpdatePersonFaceCreated(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string beneCode, Nullable<int> status, string persistedFaceID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var persistedFaceIDParameter = persistedFaceID != null ?
                new ObjectParameter("PersistedFaceID", persistedFaceID) :
                new ObjectParameter("PersistedFaceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpUpdatePersonFaceCreated", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, beneCodeParameter, statusParameter, persistedFaceIDParameter);
        }
    
        public virtual ObjectResult<string> SpUpdateHierarchyTrainStatus(string stateCode, string aWCCode, Nullable<int> trainStatus)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var trainStatusParameter = trainStatus.HasValue ?
                new ObjectParameter("TrainStatus", trainStatus) :
                new ObjectParameter("TrainStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpUpdateHierarchyTrainStatus", stateCodeParameter, aWCCodeParameter, trainStatusParameter);
        }
    
        public virtual ObjectResult<string> SpUpdatePersonDeleted(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string beneCode, string updatedBy, Nullable<int> status)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpUpdatePersonDeleted", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, beneCodeParameter, updatedByParameter, statusParameter);
        }
    
        public virtual ObjectResult<string> SpUpdatePersonFaceDeleted(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string beneCode, string updatedBy, Nullable<int> status)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpUpdatePersonFaceDeleted", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, beneCodeParameter, updatedByParameter, statusParameter);
        }
    
        public virtual ObjectResult<string> SPCreateBeneWeightHeightDetails(string aWCCode, string beneCode, Nullable<int> createdBy)
        {
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPCreateBeneWeightHeightDetails", aWCCodeParameter, beneCodeParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SPGetBeneType_Result> SPGetBeneType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetBeneType_Result>("SPGetBeneType");
        }
    
        public virtual ObjectResult<ChildGrowthCalculator_Result> ChildGrowthCalculator(Nullable<double> weight, Nullable<double> height, Nullable<System.DateTime> dOB, string gender, string beneType)
        {
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChildGrowthCalculator_Result>("ChildGrowthCalculator", weightParameter, heightParameter, dOBParameter, genderParameter, beneTypeParameter);
        }
    
        public virtual ObjectResult<SpGetWeightAgeMasterDatabyGender_Result> SpGetWeightAgeMasterDatabyGender(string gender)
        {
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetWeightAgeMasterDatabyGender_Result>("SpGetWeightAgeMasterDatabyGender", genderParameter);
        }
    
        public virtual ObjectResult<SpGetHeightAgeMasterDatabyGender_Result> SpGetHeightAgeMasterDatabyGender(string gender)
        {
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetHeightAgeMasterDatabyGender_Result>("SpGetHeightAgeMasterDatabyGender", genderParameter);
        }
    
        public virtual ObjectResult<SpGetHeightWeightMasterDatabyGender_Result> SpGetHeightWeightMasterDatabyGender(string gender)
        {
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetHeightWeightMasterDatabyGender_Result>("SpGetHeightWeightMasterDatabyGender", genderParameter);
        }
    
        public virtual ObjectResult<SpGetDashboardStat_Result> SpGetDashboardStat(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string beneType, string month, string year, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDashboardStat_Result>("SpGetDashboardStat", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, beneTypeParameter, monthParameter, yearParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetEPGMBeneficiaries_Portal_Result> SpGetEPGMBeneficiaries_Portal(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string whoType, string month, string year, string beneType)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var whoTypeParameter = whoType != null ?
                new ObjectParameter("WhoType", whoType) :
                new ObjectParameter("WhoType", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEPGMBeneficiaries_Portal_Result>("SpGetEPGMBeneficiaries_Portal", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, whoTypeParameter, monthParameter, yearParameter, beneTypeParameter);
        }
    
        public virtual ObjectResult<GetParentMenu_Result> GetParentMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetParentMenu_Result>("GetParentMenu");
        }
    
        public virtual ObjectResult<SPUpdateUserrightMaster_Result> SPUpdateUserrightMaster(Nullable<int> menuID, Nullable<int> userType, string userCode, string iPAddress)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUpdateUserrightMaster_Result>("SPUpdateUserrightMaster", menuIDParameter, userTypeParameter, userCodeParameter, iPAddressParameter);
        }
    
        public virtual ObjectResult<SPADDMENU_Result> SPADDMENU(string menuName, string menuURL, Nullable<int> parentID, string userCode, string iPAddress)
        {
            var menuNameParameter = menuName != null ?
                new ObjectParameter("MenuName", menuName) :
                new ObjectParameter("MenuName", typeof(string));
    
            var menuURLParameter = menuURL != null ?
                new ObjectParameter("MenuURL", menuURL) :
                new ObjectParameter("MenuURL", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPADDMENU_Result>("SPADDMENU", menuNameParameter, menuURLParameter, parentIDParameter, userCodeParameter, iPAddressParameter);
        }
    
        public virtual ObjectResult<SPGetMessages_Result> SPGetMessages(string userType)
        {
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetMessages_Result>("SPGetMessages", userTypeParameter);
        }
    
        public virtual ObjectResult<SPMessagesData_Result> SPMessagesData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPMessagesData_Result>("SPMessagesData");
        }
    
        public virtual ObjectResult<DeleteMessage_Result> DeleteMessage(string msgid)
        {
            var msgidParameter = msgid != null ?
                new ObjectParameter("msgid", msgid) :
                new ObjectParameter("msgid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteMessage_Result>("DeleteMessage", msgidParameter);
        }
    
        public virtual ObjectResult<SPInsertInstructionMsg_Result> SPInsertInstructionMsg(string message, string userType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string userCode, string ipadd)
        {
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPInsertInstructionMsg_Result>("SPInsertInstructionMsg", messageParameter, userTypeParameter, startDateParameter, endDateParameter, userCodeParameter, ipaddParameter);
        }
    
        public virtual ObjectResult<SPUpdateInstructionMsg_Result> SPUpdateInstructionMsg(string msgID, string message, string userType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string userCode, string ipadd)
        {
            var msgIDParameter = msgID != null ?
                new ObjectParameter("MsgID", msgID) :
                new ObjectParameter("MsgID", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var ipaddParameter = ipadd != null ?
                new ObjectParameter("ipadd", ipadd) :
                new ObjectParameter("ipadd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUpdateInstructionMsg_Result>("SPUpdateInstructionMsg", msgIDParameter, messageParameter, userTypeParameter, startDateParameter, endDateParameter, userCodeParameter, ipaddParameter);
        }
    
        public virtual ObjectResult<SPUpdatePWType_Result> SPUpdatePWType(string beneID, string beneCode)
        {
            var beneIDParameter = beneID != null ?
                new ObjectParameter("BeneID", beneID) :
                new ObjectParameter("BeneID", typeof(string));
    
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUpdatePWType_Result>("SPUpdatePWType", beneIDParameter, beneCodeParameter);
        }
    
        public virtual ObjectResult<string> SpUpdateHierarchyDeleted(string stateCode, string distCode, string projectCode, string sectorCode, string aWCCode, string updatedBy)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpUpdateHierarchyDeleted", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, aWCCodeParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<string> SpUpdateHierarchyCreated(string stateCode, string aWCCode, Nullable<int> status)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpUpdateHierarchyCreated", stateCodeParameter, aWCCodeParameter, statusParameter);
        }
    
        public virtual ObjectResult<string> SpUpdateBeneHierarchyDeleted(string stateCode, string distCode, string projectCode, string sectorCode, string aWCCode, string updatedBy)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpUpdateBeneHierarchyDeleted", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, aWCCodeParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<GetMenus_Result> GetMenus(string userType)
        {
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenus_Result>("GetMenus", userTypeParameter);
        }
    
        public virtual ObjectResult<UpdateMenurole_Result> UpdateMenurole(string enabled, string menuID, string userType, string userCode)
        {
            var enabledParameter = enabled != null ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(string));
    
            var menuIDParameter = menuID != null ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateMenurole_Result>("UpdateMenurole", enabledParameter, menuIDParameter, userTypeParameter, userCodeParameter);
        }
    
        public virtual ObjectResult<GetAppMenuData_Result> GetAppMenuData(Nullable<int> languageId, string aWCcode, Nullable<int> centerTypeID)
        {
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var aWCcodeParameter = aWCcode != null ?
                new ObjectParameter("AWCcode", aWCcode) :
                new ObjectParameter("AWCcode", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppMenuData_Result>("GetAppMenuData", languageIdParameter, aWCcodeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<UpdateMenurole_MobileApp_Result> UpdateMenurole_MobileApp(string enabled, string menuID, string awcCode, string userCode, Nullable<int> centerTypeID)
        {
            var enabledParameter = enabled != null ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(string));
    
            var menuIDParameter = menuID != null ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(string));
    
            var awcCodeParameter = awcCode != null ?
                new ObjectParameter("AwcCode", awcCode) :
                new ObjectParameter("AwcCode", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateMenurole_MobileApp_Result>("UpdateMenurole_MobileApp", enabledParameter, menuIDParameter, awcCodeParameter, userCodeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpCheckUserFF(string loginUserName)
        {
            var loginUserNameParameter = loginUserName != null ?
                new ObjectParameter("LoginUserName", loginUserName) :
                new ObjectParameter("LoginUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCheckUserFF", loginUserNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SpCheckUserFieldForce(string loginUserName)
        {
            var loginUserNameParameter = loginUserName != null ?
                new ObjectParameter("LoginUserName", loginUserName) :
                new ObjectParameter("LoginUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCheckUserFieldForce", loginUserNameParameter);
        }
    
        public virtual ObjectResult<SPGetStaffDetailsFF_Result> SPGetStaffDetailsFF(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetStaffDetailsFF_Result>("SPGetStaffDetailsFF", usernameParameter);
        }
    
        public virtual ObjectResult<SpUpdateFieldForceStaffForAWC_Result> SpUpdateFieldForceStaffForAWC(string stateCode, string districtCode, string projectCode, string sectorCode, string aWCCode, Nullable<int> staffID, string updatedBy)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateFieldForceStaffForAWC_Result>("SpUpdateFieldForceStaffForAWC", stateCodeParameter, districtCodeParameter, projectCodeParameter, sectorCodeParameter, aWCCodeParameter, staffIDParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<string> SpCreateFieldStaff(string staffCode, string password, string name, string surname, string middleName, Nullable<System.DateTime> dOB, Nullable<System.DateTime> dOJ, string gender, string mobileNumber, string email, string address, string photoImagePath, Nullable<int> createdBy, string stateCode, string qualification)
        {
            var staffCodeParameter = staffCode != null ?
                new ObjectParameter("StaffCode", staffCode) :
                new ObjectParameter("StaffCode", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var dOJParameter = dOJ.HasValue ?
                new ObjectParameter("DOJ", dOJ) :
                new ObjectParameter("DOJ", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var photoImagePathParameter = photoImagePath != null ?
                new ObjectParameter("PhotoImagePath", photoImagePath) :
                new ObjectParameter("PhotoImagePath", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("Qualification", qualification) :
                new ObjectParameter("Qualification", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpCreateFieldStaff", staffCodeParameter, passwordParameter, nameParameter, surnameParameter, middleNameParameter, dOBParameter, dOJParameter, genderParameter, mobileNumberParameter, emailParameter, addressParameter, photoImagePathParameter, createdByParameter, stateCodeParameter, qualificationParameter);
        }
    
        public virtual ObjectResult<SPGetStaffFF_Result> SPGetStaffFF(string stateCode)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetStaffFF_Result>("SPGetStaffFF", stateCodeParameter);
        }
    
        public virtual ObjectResult<SpUpdateStatusOfFieldForce_Result> SpUpdateStatusOfFieldForce(string stateCode, Nullable<int> staffID, string status)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateStatusOfFieldForce_Result>("SpUpdateStatusOfFieldForce", stateCodeParameter, staffIDParameter, statusParameter);
        }
    
        public virtual ObjectResult<SpFieldForceStaffDetails_Result> SpFieldForceStaffDetails(string stateCode)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpFieldForceStaffDetails_Result>("SpFieldForceStaffDetails", stateCodeParameter);
        }
    
        public virtual ObjectResult<SpGetDashboardStat_Portal_Result> SpGetDashboardStat_Portal(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string month, string year, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDashboardStat_Portal_Result>("SpGetDashboardStat_Portal", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, monthParameter, yearParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetEPGMBenes_Result> SpGetEPGMBenes(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string whoType, string month, string year, string beneType, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var whoTypeParameter = whoType != null ?
                new ObjectParameter("WhoType", whoType) :
                new ObjectParameter("WhoType", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEPGMBenes_Result>("SpGetEPGMBenes", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, whoTypeParameter, monthParameter, yearParameter, beneTypeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetDistLevelDetails_Result> SpGetDistLevelDetails(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string beneType, string month, string year, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDistLevelDetails_Result>("SpGetDistLevelDetails", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, beneTypeParameter, monthParameter, yearParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetAWC_Result> SpGetAWC(string secCode, string projCode, string stateCode, Nullable<int> centerTypeID)
        {
            var secCodeParameter = secCode != null ?
                new ObjectParameter("SecCode", secCode) :
                new ObjectParameter("SecCode", typeof(string));
    
            var projCodeParameter = projCode != null ?
                new ObjectParameter("ProjCode", projCode) :
                new ObjectParameter("ProjCode", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAWC_Result>("SpGetAWC", secCodeParameter, projCodeParameter, stateCodeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetSector_Result> SpGetSector(string stateCode, string distCode, string projCode, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projCodeParameter = projCode != null ?
                new ObjectParameter("ProjCode", projCode) :
                new ObjectParameter("ProjCode", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSector_Result>("SpGetSector", stateCodeParameter, distCodeParameter, projCodeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SPUpdateSector_Result> SPUpdateSector(string stateCode, string districtCode, string projectCode, string sectorCode, string sectorName, Nullable<int> updatedBy, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var sectorNameParameter = sectorName != null ?
                new ObjectParameter("SectorName", sectorName) :
                new ObjectParameter("SectorName", typeof(string));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUpdateSector_Result>("SPUpdateSector", stateCodeParameter, districtCodeParameter, projectCodeParameter, sectorCodeParameter, sectorNameParameter, updatedByParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetEPGMSectorDetails_Result> SpGetEPGMSectorDetails(string wHOCode, string stateCode, string projCode, string beneType, string month, string year, Nullable<int> centerTypeID)
        {
            var wHOCodeParameter = wHOCode != null ?
                new ObjectParameter("WHOCode", wHOCode) :
                new ObjectParameter("WHOCode", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var projCodeParameter = projCode != null ?
                new ObjectParameter("ProjCode", projCode) :
                new ObjectParameter("ProjCode", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEPGMSectorDetails_Result>("SpGetEPGMSectorDetails", wHOCodeParameter, stateCodeParameter, projCodeParameter, beneTypeParameter, monthParameter, yearParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SPUpdateProject_Result> SPUpdateProject(string stateCode, string districtCode, string projectCode, string projectName, Nullable<int> updatedBy, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUpdateProject_Result>("SPUpdateProject", stateCodeParameter, districtCodeParameter, projectCodeParameter, projectNameParameter, updatedByParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetEPGMProjectDetails_Result> SpGetEPGMProjectDetails(string wHOCode, string stateCode, string distCode, string beneType, string month, string year, Nullable<int> centerTypeID)
        {
            var wHOCodeParameter = wHOCode != null ?
                new ObjectParameter("WHOCode", wHOCode) :
                new ObjectParameter("WHOCode", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEPGMProjectDetails_Result>("SpGetEPGMProjectDetails", wHOCodeParameter, stateCodeParameter, distCodeParameter, beneTypeParameter, monthParameter, yearParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpInsertLoginUser_Result> SpInsertLoginUser(string username, string password, string mobileNo, string userEmail, string roleCode, string stateCode, string districtCode, string projectCode, string sectorCode, string aWCCode, string createdBy, string name, Nullable<int> centerTypeID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var roleCodeParameter = roleCode != null ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpInsertLoginUser_Result>("SpInsertLoginUser", usernameParameter, passwordParameter, mobileNoParameter, userEmailParameter, roleCodeParameter, stateCodeParameter, districtCodeParameter, projectCodeParameter, sectorCodeParameter, aWCCodeParameter, createdByParameter, nameParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SPGetCentersType_Result> SPGetCentersType(Nullable<int> centerTypeID)
        {
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetCentersType_Result>("SPGetCentersType", centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetProjectDetails_Result> SpGetProjectDetails(string stateCode, string distCode, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetProjectDetails_Result>("SpGetProjectDetails", stateCodeParameter, distCodeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetProject_Result> SpGetProject(string distCode, string stateCode, Nullable<int> centerTypeID)
        {
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetProject_Result>("SpGetProject", distCodeParameter, stateCodeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SPUpdateAWC_Result> SPUpdateAWC(string stateCode, string districtCode, string projectCode, string sectorCode, string aWCCode, string aWCName, string aWWName, string aWWMobile, string updatedBy, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var aWCNameParameter = aWCName != null ?
                new ObjectParameter("AWCName", aWCName) :
                new ObjectParameter("AWCName", typeof(string));
    
            var aWWNameParameter = aWWName != null ?
                new ObjectParameter("AWWName", aWWName) :
                new ObjectParameter("AWWName", typeof(string));
    
            var aWWMobileParameter = aWWMobile != null ?
                new ObjectParameter("AWWMobile", aWWMobile) :
                new ObjectParameter("AWWMobile", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPUpdateAWC_Result>("SPUpdateAWC", stateCodeParameter, districtCodeParameter, projectCodeParameter, sectorCodeParameter, aWCCodeParameter, aWCNameParameter, aWWNameParameter, aWWMobileParameter, updatedByParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetAWCDetails_Result> SpGetAWCDetails(string stateCode, string secCode, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var secCodeParameter = secCode != null ?
                new ObjectParameter("SecCode", secCode) :
                new ObjectParameter("SecCode", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAWCDetails_Result>("SpGetAWCDetails", stateCodeParameter, secCodeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SPGetPWWomenData_Result> SPGetPWWomenData(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string beneType, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGetPWWomenData_Result>("SPGetPWWomenData", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, beneTypeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<string> SpNewBene(string aWCCode, string beneName, string beneSurname, string beneMiddleName, string motherName, string fatherName, string fatherRationCardNumber, Nullable<System.DateTime> dOB, string gender, string mobileNumber, string contact1, string contact2, string beneCategory, Nullable<int> beneType, string aadhaarNumber, string aadhaarType, string residentType, Nullable<System.DateTime> registeredDate, Nullable<decimal> income, string stateCode, string districtCode, string projectCode, string sectorCode, string langitude, string latitude, string imagePath, string address, Nullable<int> createdBy, string isRegisterd, string isEnrolled, string deptUID, string birthWeight, Nullable<System.DateTime> eDD, string regType, Nullable<int> centerTypeID)
        {
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var beneNameParameter = beneName != null ?
                new ObjectParameter("BeneName", beneName) :
                new ObjectParameter("BeneName", typeof(string));
    
            var beneSurnameParameter = beneSurname != null ?
                new ObjectParameter("BeneSurname", beneSurname) :
                new ObjectParameter("BeneSurname", typeof(string));
    
            var beneMiddleNameParameter = beneMiddleName != null ?
                new ObjectParameter("BeneMiddleName", beneMiddleName) :
                new ObjectParameter("BeneMiddleName", typeof(string));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var fatherRationCardNumberParameter = fatherRationCardNumber != null ?
                new ObjectParameter("FatherRationCardNumber", fatherRationCardNumber) :
                new ObjectParameter("FatherRationCardNumber", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var contact1Parameter = contact1 != null ?
                new ObjectParameter("Contact1", contact1) :
                new ObjectParameter("Contact1", typeof(string));
    
            var contact2Parameter = contact2 != null ?
                new ObjectParameter("Contact2", contact2) :
                new ObjectParameter("Contact2", typeof(string));
    
            var beneCategoryParameter = beneCategory != null ?
                new ObjectParameter("BeneCategory", beneCategory) :
                new ObjectParameter("BeneCategory", typeof(string));
    
            var beneTypeParameter = beneType.HasValue ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(int));
    
            var aadhaarNumberParameter = aadhaarNumber != null ?
                new ObjectParameter("AadhaarNumber", aadhaarNumber) :
                new ObjectParameter("AadhaarNumber", typeof(string));
    
            var aadhaarTypeParameter = aadhaarType != null ?
                new ObjectParameter("AadhaarType", aadhaarType) :
                new ObjectParameter("AadhaarType", typeof(string));
    
            var residentTypeParameter = residentType != null ?
                new ObjectParameter("ResidentType", residentType) :
                new ObjectParameter("ResidentType", typeof(string));
    
            var registeredDateParameter = registeredDate.HasValue ?
                new ObjectParameter("RegisteredDate", registeredDate) :
                new ObjectParameter("RegisteredDate", typeof(System.DateTime));
    
            var incomeParameter = income.HasValue ?
                new ObjectParameter("Income", income) :
                new ObjectParameter("Income", typeof(decimal));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var langitudeParameter = langitude != null ?
                new ObjectParameter("Langitude", langitude) :
                new ObjectParameter("Langitude", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var isRegisterdParameter = isRegisterd != null ?
                new ObjectParameter("IsRegisterd", isRegisterd) :
                new ObjectParameter("IsRegisterd", typeof(string));
    
            var isEnrolledParameter = isEnrolled != null ?
                new ObjectParameter("IsEnrolled", isEnrolled) :
                new ObjectParameter("IsEnrolled", typeof(string));
    
            var deptUIDParameter = deptUID != null ?
                new ObjectParameter("DeptUID", deptUID) :
                new ObjectParameter("DeptUID", typeof(string));
    
            var birthWeightParameter = birthWeight != null ?
                new ObjectParameter("BirthWeight", birthWeight) :
                new ObjectParameter("BirthWeight", typeof(string));
    
            var eDDParameter = eDD.HasValue ?
                new ObjectParameter("EDD", eDD) :
                new ObjectParameter("EDD", typeof(System.DateTime));
    
            var regTypeParameter = regType != null ?
                new ObjectParameter("RegType", regType) :
                new ObjectParameter("RegType", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpNewBene", aWCCodeParameter, beneNameParameter, beneSurnameParameter, beneMiddleNameParameter, motherNameParameter, fatherNameParameter, fatherRationCardNumberParameter, dOBParameter, genderParameter, mobileNumberParameter, contact1Parameter, contact2Parameter, beneCategoryParameter, beneTypeParameter, aadhaarNumberParameter, aadhaarTypeParameter, residentTypeParameter, registeredDateParameter, incomeParameter, stateCodeParameter, districtCodeParameter, projectCodeParameter, sectorCodeParameter, langitudeParameter, latitudeParameter, imagePathParameter, addressParameter, createdByParameter, isRegisterdParameter, isEnrolledParameter, deptUIDParameter, birthWeightParameter, eDDParameter, regTypeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<string> SpUpdatePersonCreated(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string beneCode, Nullable<int> status, string personID, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var personIDParameter = personID != null ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpUpdatePersonCreated", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, beneCodeParameter, statusParameter, personIDParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetAllBenesofCenter_Result> SpGetAllBenesofCenter(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string beneType, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAllBenesofCenter_Result>("SpGetAllBenesofCenter", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, beneTypeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpUpdateStatusOfBene_Result> SpUpdateStatusOfBene(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string beneCode, string status, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpUpdateStatusOfBene_Result>("SpUpdateStatusOfBene", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, beneCodeParameter, statusParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetEPGMBeneficiaries_Result> SpGetEPGMBeneficiaries(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string whoType, string month, string year, string beneType, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var whoTypeParameter = whoType != null ?
                new ObjectParameter("WhoType", whoType) :
                new ObjectParameter("WhoType", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEPGMBeneficiaries_Result>("SpGetEPGMBeneficiaries", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, whoTypeParameter, monthParameter, yearParameter, beneTypeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetEPGMDistrictDetails_Result> SpGetEPGMDistrictDetails(string wHOCode, string stateCode, string beneType, string month, string year, Nullable<int> centerTypeID)
        {
            var wHOCodeParameter = wHOCode != null ?
                new ObjectParameter("WHOCode", wHOCode) :
                new ObjectParameter("WHOCode", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEPGMDistrictDetails_Result>("SpGetEPGMDistrictDetails", wHOCodeParameter, stateCodeParameter, beneTypeParameter, monthParameter, yearParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetEPGMAWCDetails_Result> SpGetEPGMAWCDetails(string wHOCode, string stateCode, string secCode, string beneType, string month, string year, Nullable<int> centerTypeID)
        {
            var wHOCodeParameter = wHOCode != null ?
                new ObjectParameter("WHOCode", wHOCode) :
                new ObjectParameter("WHOCode", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var secCodeParameter = secCode != null ?
                new ObjectParameter("SecCode", secCode) :
                new ObjectParameter("SecCode", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEPGMAWCDetails_Result>("SpGetEPGMAWCDetails", wHOCodeParameter, stateCodeParameter, secCodeParameter, beneTypeParameter, monthParameter, yearParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<SpGetAllBeneficiaryDetails_Result> SpGetAllBeneficiaryDetails(string stateCode, string distCode, string projectCode, string sectorCode, string centerCode, string beneType, Nullable<int> centerTypeID)
        {
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var distCodeParameter = distCode != null ?
                new ObjectParameter("DistCode", distCode) :
                new ObjectParameter("DistCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var centerCodeParameter = centerCode != null ?
                new ObjectParameter("CenterCode", centerCode) :
                new ObjectParameter("CenterCode", typeof(string));
    
            var beneTypeParameter = beneType != null ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAllBeneficiaryDetails_Result>("SpGetAllBeneficiaryDetails", stateCodeParameter, distCodeParameter, projectCodeParameter, sectorCodeParameter, centerCodeParameter, beneTypeParameter, centerTypeIDParameter);
        }
    
        public virtual ObjectResult<USP_Update_BENEFICIARY_Result> USP_Update_BENEFICIARY(string aWCCode, string beneCode, string beneName, string beneSurname, string motherName, string fatherName, string fatherRationCardNumber, Nullable<System.DateTime> dOB, string gender, string mobileNumber, string beneCategory, Nullable<int> beneType, string aadhaarNumber, string aadhaarType, string residentType, Nullable<System.DateTime> registeredDate, Nullable<decimal> income, string stateCode, string districtCode, string projectCode, string sectorCode, Nullable<int> updatedby, string deptUID, string birthWeight, Nullable<int> centerTypeID)
        {
            var aWCCodeParameter = aWCCode != null ?
                new ObjectParameter("AWCCode", aWCCode) :
                new ObjectParameter("AWCCode", typeof(string));
    
            var beneCodeParameter = beneCode != null ?
                new ObjectParameter("BeneCode", beneCode) :
                new ObjectParameter("BeneCode", typeof(string));
    
            var beneNameParameter = beneName != null ?
                new ObjectParameter("BeneName", beneName) :
                new ObjectParameter("BeneName", typeof(string));
    
            var beneSurnameParameter = beneSurname != null ?
                new ObjectParameter("BeneSurname", beneSurname) :
                new ObjectParameter("BeneSurname", typeof(string));
    
            var motherNameParameter = motherName != null ?
                new ObjectParameter("MotherName", motherName) :
                new ObjectParameter("MotherName", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var fatherRationCardNumberParameter = fatherRationCardNumber != null ?
                new ObjectParameter("FatherRationCardNumber", fatherRationCardNumber) :
                new ObjectParameter("FatherRationCardNumber", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var beneCategoryParameter = beneCategory != null ?
                new ObjectParameter("BeneCategory", beneCategory) :
                new ObjectParameter("BeneCategory", typeof(string));
    
            var beneTypeParameter = beneType.HasValue ?
                new ObjectParameter("BeneType", beneType) :
                new ObjectParameter("BeneType", typeof(int));
    
            var aadhaarNumberParameter = aadhaarNumber != null ?
                new ObjectParameter("AadhaarNumber", aadhaarNumber) :
                new ObjectParameter("AadhaarNumber", typeof(string));
    
            var aadhaarTypeParameter = aadhaarType != null ?
                new ObjectParameter("AadhaarType", aadhaarType) :
                new ObjectParameter("AadhaarType", typeof(string));
    
            var residentTypeParameter = residentType != null ?
                new ObjectParameter("ResidentType", residentType) :
                new ObjectParameter("ResidentType", typeof(string));
    
            var registeredDateParameter = registeredDate.HasValue ?
                new ObjectParameter("RegisteredDate", registeredDate) :
                new ObjectParameter("RegisteredDate", typeof(System.DateTime));
    
            var incomeParameter = income.HasValue ?
                new ObjectParameter("Income", income) :
                new ObjectParameter("Income", typeof(decimal));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var districtCodeParameter = districtCode != null ?
                new ObjectParameter("DistrictCode", districtCode) :
                new ObjectParameter("DistrictCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var sectorCodeParameter = sectorCode != null ?
                new ObjectParameter("SectorCode", sectorCode) :
                new ObjectParameter("SectorCode", typeof(string));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("Updatedby", updatedby) :
                new ObjectParameter("Updatedby", typeof(int));
    
            var deptUIDParameter = deptUID != null ?
                new ObjectParameter("DeptUID", deptUID) :
                new ObjectParameter("DeptUID", typeof(string));
    
            var birthWeightParameter = birthWeight != null ?
                new ObjectParameter("BirthWeight", birthWeight) :
                new ObjectParameter("BirthWeight", typeof(string));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Update_BENEFICIARY_Result>("USP_Update_BENEFICIARY", aWCCodeParameter, beneCodeParameter, beneNameParameter, beneSurnameParameter, motherNameParameter, fatherNameParameter, fatherRationCardNumberParameter, dOBParameter, genderParameter, mobileNumberParameter, beneCategoryParameter, beneTypeParameter, aadhaarNumberParameter, aadhaarTypeParameter, residentTypeParameter, registeredDateParameter, incomeParameter, stateCodeParameter, districtCodeParameter, projectCodeParameter, sectorCodeParameter, updatedbyParameter, deptUIDParameter, birthWeightParameter, centerTypeIDParameter);
        }
    }
}
